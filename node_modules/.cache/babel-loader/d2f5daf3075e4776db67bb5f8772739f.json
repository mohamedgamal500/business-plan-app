{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\business-plan-app\\\\client\\\\src\\\\components\\\\EndScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../App.css\";\nimport Swal from \"sweetalert2\"; // import withReactContent from \"sweetalert2-react-content\";\n\nimport { setAppState, setUserName, reset } from \"../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPlan } from \"../api\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EndScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    userName,\n    answeredQuestions\n  } = useSelector(state => state);\n  const [submited, setSubmited] = useState(false); // const MySwal = withReactContent(Swal);\n\n  let answers = [];\n\n  const savePlan = () => {\n    addPlan({\n      CompanyName: userName,\n      answers\n    }).then(() => {\n      Swal.fire(\"Your answers are submitted successfully.\", \"success\");\n      setSubmited(true);\n    });\n  };\n\n  const restartApp = () => {\n    dispatch(setUserName(\"\"));\n    dispatch(reset());\n    dispatch(setAppState(\"start\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EndScreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"companyName\",\n      children: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), answeredQuestions.map((question, index) => {\n      answers.push({\n        questionId: question.id,\n        answer: question.answer\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: question.prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: submited,\n      onClick: savePlan,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restartApp,\n      children: \"Restart Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EndScreen, \"HLWTd9bNnV83xm7aAkylq/PM4Bs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EndScreen;\nexport default EndScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EndScreen\");","map":{"version":3,"sources":["D:/GitHub/business-plan-app/client/src/components/EndScreen.js"],"names":["React","Swal","setAppState","setUserName","reset","useDispatch","useSelector","addPlan","useState","EndScreen","dispatch","userName","answeredQuestions","state","submited","setSubmited","answers","savePlan","CompanyName","then","fire","restartApp","map","question","index","push","questionId","id","answer","prompt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,KAAnC,QAAgD,YAAhD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAkCN,WAAW,CAAEO,KAAD,IAAWA,KAAZ,CAAnD;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC,CAHsB,CAItB;;AAEA,MAAIQ,OAAO,GAAG,EAAd;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACrBV,IAAAA,OAAO,CAAC;AAAEW,MAAAA,WAAW,EAAEP,QAAf;AAAyBK,MAAAA;AAAzB,KAAD,CAAP,CAA4CG,IAA5C,CAAiD,MAAM;AACrDlB,MAAAA,IAAI,CAACmB,IAAL,CAAU,0CAAV,EAAsD,SAAtD;AACAL,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD;AAID,GALD;;AAOA,QAAMM,UAAU,GAAG,MAAM;AACvBX,IAAAA,QAAQ,CAACP,WAAW,CAAC,EAAD,CAAZ,CAAR;AACAO,IAAAA,QAAQ,CAACN,KAAK,EAAN,CAAR;AACAM,IAAAA,QAAQ,CAACR,WAAW,CAAC,OAAD,CAAZ,CAAR;AACD,GAJD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,EAAE,EAAC,aAAP;AAAA,gBAAsBS;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGC,iBAAiB,CAACU,GAAlB,CAAsB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC1CR,MAAAA,OAAO,CAACS,IAAR,CAAa;AAAEC,QAAAA,UAAU,EAAEH,QAAQ,CAACI,EAAvB;AAA2BC,QAAAA,MAAM,EAAEL,QAAQ,CAACK;AAA5C,OAAb;AACA,0BACE;AAAA,gCACE;AAAA,oBAAKL,QAAQ,CAACM;AAAd;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIN,QAAQ,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KARA,CAJH,eAaE;AAAQ,MAAA,QAAQ,EAAEV,QAAlB;AAA4B,MAAA,OAAO,EAAEG,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAgBE;AAAQ,MAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAvCD;;GAAMZ,S;UACaJ,W,EACuBC,W;;;KAFpCG,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport Swal from \"sweetalert2\";\n// import withReactContent from \"sweetalert2-react-content\";\nimport { setAppState, setUserName, reset } from \"../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPlan } from \"../api\";\nimport { useState } from \"react\";\n\nconst EndScreen = () => {\n  const dispatch = useDispatch();\n  const { userName, answeredQuestions } = useSelector((state) => state);\n  const [submited, setSubmited] = useState(false);\n  // const MySwal = withReactContent(Swal);\n\n  let answers = [];\n  const savePlan = () => {\n    addPlan({ CompanyName: userName, answers }).then(() => {\n      Swal.fire(\"Your answers are submitted successfully.\", \"success\");\n      setSubmited(true);\n    });\n  };\n\n  const restartApp = () => {\n    dispatch(setUserName(\"\"));\n    dispatch(reset());\n    dispatch(setAppState(\"start\"));\n  };\n  return (\n    <div className=\"EndScreen\">\n      <h1>Company Name</h1>\n      <h2 id=\"companyName\">{userName}</h2>\n      <h1>Your Plan</h1>\n      {answeredQuestions.map((question, index) => {\n        answers.push({ questionId: question.id, answer: question.answer });\n        return (\n          <div key={index}>\n            <h1>{question.prompt}</h1>\n            <p>{question.answer}</p>\n          </div>\n        );\n      })}\n      <button disabled={submited} onClick={savePlan}>\n        Submit\n      </button>\n      <button onClick={restartApp}>Restart Plan</button>\n    </div>\n  );\n};\n\nexport default EndScreen;\n"]},"metadata":{},"sourceType":"module"}