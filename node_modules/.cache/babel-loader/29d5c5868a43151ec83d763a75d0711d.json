{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\business-plan-app\\\\client\\\\src\\\\components\\\\EndScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../App.css\";\nimport { setAppState, setUserName, reset } from \"../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPlan } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EndScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    userName,\n    answeredQuestions\n  } = useSelector(state => state);\n  let answers = [];\n\n  const savePlan = () => {\n    addPlan({\n      CompanyName: userName,\n      answers\n    }).then(() => {\n      alert(\"your answers are submitted successsfully\");\n    });\n  };\n\n  const restartApp = () => {\n    dispatch(setUserName(\"\"));\n    dispatch(reset());\n    dispatch(setAppState(\"start\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EndScreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"companyName\",\n      children: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), answeredQuestions.map((question, index) => {\n      answers.push({\n        questionId: question.id,\n        answer: question.answer\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: question.prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: savePlan,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restartApp,\n      children: \"Restart Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EndScreen, \"PPMYdecCrMz9etYaPWF99CZQQgo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EndScreen;\nexport default EndScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EndScreen\");","map":{"version":3,"sources":["D:/GitHub/business-plan-app/client/src/components/EndScreen.js"],"names":["React","setAppState","setUserName","reset","useDispatch","useSelector","addPlan","EndScreen","dispatch","userName","answeredQuestions","state","answers","savePlan","CompanyName","then","alert","restartApp","map","question","index","push","questionId","id","answer","prompt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,KAAnC,QAAgD,YAAhD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,QAAxB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAkCL,WAAW,CAAEM,KAAD,IAAWA,KAAZ,CAAnD;AAEA,MAAIC,OAAO,GAAG,EAAd;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrBP,IAAAA,OAAO,CAAC;AAAEQ,MAAAA,WAAW,EAAEL,QAAf;AAAyBG,MAAAA;AAAzB,KAAD,CAAP,CAA4CG,IAA5C,CAAiD,MAAM;AACrDC,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACD,KAFD;AAGD,GAJD;;AAMA,QAAMC,UAAU,GAAG,MAAM;AACvBT,IAAAA,QAAQ,CAACN,WAAW,CAAC,EAAD,CAAZ,CAAR;AACAM,IAAAA,QAAQ,CAACL,KAAK,EAAN,CAAR;AACAK,IAAAA,QAAQ,CAACP,WAAW,CAAC,OAAD,CAAZ,CAAR;AACD,GAJD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,EAAE,EAAC,aAAP;AAAA,gBAAsBQ;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGC,iBAAiB,CAACQ,GAAlB,CAAsB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC1CR,MAAAA,OAAO,CAACS,IAAR,CAAa;AAAEC,QAAAA,UAAU,EAAEH,QAAQ,CAACI,EAAvB;AAA2BC,QAAAA,MAAM,EAAEL,QAAQ,CAACK;AAA5C,OAAb;AACA,0BACE;AAAA,gCACE;AAAA,oBAAKL,QAAQ,CAACM;AAAd;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIN,QAAQ,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KARA,CAJH,eAaE;AAAQ,MAAA,OAAO,EAAEP,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE;AAAQ,MAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnCD;;GAAMV,S;UACaH,W,EACuBC,W;;;KAFpCE,S;AAqCN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport { setAppState, setUserName, reset } from \"../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPlan } from \"../api\";\n\nconst EndScreen = () => {\n  const dispatch = useDispatch();\n  const { userName, answeredQuestions } = useSelector((state) => state);\n\n  let answers = [];\n\n  const savePlan = () => {\n    addPlan({ CompanyName: userName, answers }).then(() => {\n      alert(\"your answers are submitted successsfully\");\n    });\n  };\n\n  const restartApp = () => {\n    dispatch(setUserName(\"\"));\n    dispatch(reset());\n    dispatch(setAppState(\"start\"));\n  };\n  return (\n    <div className=\"EndScreen\">\n      <h1>Company Name</h1>\n      <h2 id=\"companyName\">{userName}</h2>\n      <h1>Your Plan</h1>\n      {answeredQuestions.map((question, index) => {\n        answers.push({ questionId: question.id, answer: question.answer });\n        return (\n          <div key={index}>\n            <h1>{question.prompt}</h1>\n            <p>{question.answer}</p>\n          </div>\n        );\n      })}\n      <button onClick={savePlan}>Submit</button>\n      <button onClick={restartApp}>Restart Plan</button>\n    </div>\n  );\n};\n\nexport default EndScreen;\n"]},"metadata":{},"sourceType":"module"}